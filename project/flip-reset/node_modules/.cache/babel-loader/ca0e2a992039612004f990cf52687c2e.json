{"ast":null,"code":"import * as Actions from './actionTypes';\n/**\n * Stores the username into the redux store\n * \n * @param {String} username\n */\n\nexport const loginUser = username => ({\n  type: Actions.USER_LOGIN,\n  payload: {\n    username\n  }\n});\n/**\n * Stores the username into the redux store\n * \n * @param {Number} username\n */\n\nexport const userMoney = money => ({\n  type: Actions.USER_MONEY,\n  payload: {\n    money\n  }\n});\n/**\n * Stores an array of item data\n * \n * @param {Array} data \n */\n\nexport const loadItems = data => ({\n  type: Actions.ITEMS_LOAD,\n  payload: {\n    data\n  }\n});\n/**\n * Unloads the items from the database\n */\n\nexport const unloadItems = () => ({\n  type: Actions.ITEMS_UNLOAD\n});","map":{"version":3,"sources":["/home/travis/FlipReset/project/flip-reset/src/redux/actions.js"],"names":["Actions","loginUser","username","type","USER_LOGIN","payload","userMoney","money","USER_MONEY","loadItems","data","ITEMS_LOAD","unloadItems","ITEMS_UNLOAD"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA;;;;;;AAKA,OAAO,MAAMC,SAAS,GAAIC,QAAD,KAAa;AAClCC,EAAAA,IAAI,EAAEH,OAAO,CAACI,UADoB;AAElCC,EAAAA,OAAO,EAAE;AACLH,IAAAA;AADK;AAFyB,CAAb,CAAlB;AAOP;;;;;;AAKA,OAAO,MAAMI,SAAS,GAAIC,KAAD,KAAU;AAC/BJ,EAAAA,IAAI,EAAEH,OAAO,CAACQ,UADiB;AAE/BH,EAAAA,OAAO,EAAE;AACLE,IAAAA;AADK;AAFsB,CAAV,CAAlB;AAOP;;;;;;AAKA,OAAO,MAAME,SAAS,GAAIC,IAAD,KAAU;AAC/BP,EAAAA,IAAI,EAAEH,OAAO,CAACW,UADiB;AAE/BN,EAAAA,OAAO,EAAE;AACLK,IAAAA;AADK;AAFsB,CAAV,CAAlB;AAOP;;;;AAGA,OAAO,MAAME,WAAW,GAAG,OAAM;AAC7BT,EAAAA,IAAI,EAAEH,OAAO,CAACa;AADe,CAAN,CAApB","sourcesContent":["import * as Actions from './actionTypes';\n\n/**\n * Stores the username into the redux store\n * \n * @param {String} username\n */\nexport const loginUser = (username)=>({\n    type: Actions.USER_LOGIN,\n    payload: {\n        username\n    }\n});\n\n/**\n * Stores the username into the redux store\n * \n * @param {Number} username\n */\nexport const userMoney = (money)=>({\n    type: Actions.USER_MONEY,\n    payload: {\n        money\n    }\n});\n\n/**\n * Stores an array of item data\n * \n * @param {Array} data \n */\nexport const loadItems = (data) =>({\n    type: Actions.ITEMS_LOAD,\n    payload: {\n        data\n    }\n})\n\n/**\n * Unloads the items from the database\n */\nexport const unloadItems = () =>({\n    type: Actions.ITEMS_UNLOAD\n})"]},"metadata":{},"sourceType":"module"}