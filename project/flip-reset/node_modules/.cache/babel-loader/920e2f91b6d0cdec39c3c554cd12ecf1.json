{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database'; // import 'firebase/messaging';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID\n}; // const config = {\n//   apiKey: \"AIzaSyAHkDGeM9tCKCIYyJ0pKL13fE-ICudCZ3M\",\n//   authDomain: \"test1-cf3a2.firebaseapp.com\",\n//   databaseURL: \"https://test1-cf3a2.firebaseio.com/\",\n//   projectId: \"test1-cf3a2\",\n//   storageBucket: \"test1-cf3a2.appspot.com\",\n//   messagingSenderId: \"521660089302\",\n//   appId: \"1:521660089302:web:b3a43bb3b0da115aa21a77\",\n//   measurementId: \"G-CZ9SCS5DQK\"\n// };\n\nclass fire {\n  constructor() {\n    this.doSubmitFile = file => {\n      thi.storageRef.put(file).then(function (snapshot) {\n        console.log('Uploaded a blob or file!');\n      });\n    };\n\n    this.doCreateUserWithEmailAndPassword = (email, password) => {\n      return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.doSendEmailVerification = () => {\n      this.auth.currentUser.sendEmailVerification({\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n      });\n    };\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.onAuthUserListener = (next, fallback) => this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        console.log(\"The authenticated user is: \");\n        console.log(authUser);\n        this.user(authUser.uid).once('value').then(snapshot => {\n          const dbUser = snapshot.val(); // merge auth and db user\n\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            emailVerified: authUser.emailVerified,\n            //providerData: authUser.providerData,\n            ...dbUser\n          };\n          next(authUser);\n        });\n      } else {\n        fallback();\n      }\n    });\n\n    this.user = uid => this.db.ref(`users/${uid}`);\n\n    this.users = () => this.db.ref('users');\n\n    //console.log(process.env);\n    firebase.initializeApp(config);\n    /* Helper */\n\n    this.emailAuthProvider = firebase.auth.EmailAuthProvider;\n    this.auth = firebase.auth();\n    this.db = firebase.database();\n    this.storageRef = firebase.storage().ref();\n    /* Social Sign In Method Provider */\n\n    /*\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n    */\n  }\n  /*\n    // *** Message API ***\n   message = uid => this.db.ref(`messages/${uid}`);\n   messages = () => this.db.ref('messages');\n  */\n\n\n}\n\nexport const storage = firebase.storage();\nexport const storageRef = storage.ref();\nexport default fire;","map":{"version":3,"sources":["/Users/Justin/go/src/FlipReset/project/flip-reset/src/components/Firebase/fire.js"],"names":["firebase","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","fire","constructor","doSubmitFile","file","thi","storageRef","put","then","snapshot","console","log","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordUpdate","updatePassword","doPasswordReset","sendPasswordResetEmail","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","dbUser","val","emailVerified","db","ref","users","initializeApp","emailAuthProvider","EmailAuthProvider","database","storage"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// import 'firebase/messaging';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID\n};\n\n// const config = {\n//   apiKey: \"AIzaSyAHkDGeM9tCKCIYyJ0pKL13fE-ICudCZ3M\",\n//   authDomain: \"test1-cf3a2.firebaseapp.com\",\n//   databaseURL: \"https://test1-cf3a2.firebaseio.com/\",\n//   projectId: \"test1-cf3a2\",\n//   storageBucket: \"test1-cf3a2.appspot.com\",\n//   messagingSenderId: \"521660089302\",\n//   appId: \"1:521660089302:web:b3a43bb3b0da115aa21a77\",\n//   measurementId: \"G-CZ9SCS5DQK\"\n// };\n\nclass fire {\n  constructor() {\n    //console.log(process.env);\n    firebase.initializeApp(config);\n\n    /* Helper */\n    \n    this.emailAuthProvider = firebase.auth.EmailAuthProvider;\n\n    this.auth = firebase.auth();\n    this.db = firebase.database();\n    this.storageRef= firebase.storage().ref();\n   \n\n    /* Social Sign In Method Provider */\n    /*\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n    */\n  }\n\n  doSubmitFile = (file) => {\n  thi.storageRef.put(file).then(function(snapshot) {\n      console.log('Uploaded a blob or file!');\n    });\n  }\n\n\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  doSendEmailVerification = () => {\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n  }\n\n  doSignInWithEmailAndPassword = (email, password) =>\n  this.auth.signInWithEmailAndPassword(email, password);\n  /*\n\n   doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider)\n\n  */\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        console.log(\"The authenticated user is: \");\n        console.log(authUser);\n        this.user(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              //providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n    // *** User API ***\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n    /*\n      // *** Message API ***\n\n    message = uid => this.db.ref(`messages/${uid}`);\n\n    messages = () => this.db.ref('messages');\n    */\n}\nexport const storage = firebase.storage()\nexport const storageRef = storage.ref();\nexport default fire;\n\n"]},"metadata":{},"sourceType":"module"}