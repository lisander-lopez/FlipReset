{"ast":null,"code":"import*as Actions from'./actionTypes';/**\n * Stores the username into the redux store\n * \n * @param {String} username\n */export var loginUser=function loginUser(username){return{type:Actions.USER_LOGIN,payload:{username:username}};};/**\n * Stores the username into the redux store\n * \n * @param {Number} username\n */export var userMoney=function userMoney(money){return{type:Actions.USER_MONEY,payload:{money:money}};};/**\n * Stores an array of item data\n * \n * @param {Array} data \n */export var loadItems=function loadItems(data){return{type:Actions.ITEMS_LOAD,payload:{data:data}};};/**\n * Unloads the items from the database\n */export var unloadItems=function unloadItems(){return{type:Actions.ITEMS_UNLOAD};};","map":{"version":3,"sources":["/Users/Justin/go/src/FlipReset/project/flip-reset/src/redux/actions.js"],"names":["Actions","loginUser","username","type","USER_LOGIN","payload","userMoney","money","USER_MONEY","loadItems","data","ITEMS_LOAD","unloadItems","ITEMS_UNLOAD"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,eAAzB,CAEA;;;;GAKA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,QAAa,CAClCC,IAAI,CAAEH,OAAO,CAACI,UADoB,CAElCC,OAAO,CAAE,CACLH,QAAQ,CAARA,QADK,CAFyB,CAAb,EAAlB,CAOP;;;;GAKA,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,QAAU,CAC/BJ,IAAI,CAAEH,OAAO,CAACQ,UADiB,CAE/BH,OAAO,CAAE,CACLE,KAAK,CAALA,KADK,CAFsB,CAAV,EAAlB,CAOP;;;;GAKA,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,QAAU,CAC/BP,IAAI,CAAEH,OAAO,CAACW,UADiB,CAE/BN,OAAO,CAAE,CACLK,IAAI,CAAJA,IADK,CAFsB,CAAV,EAAlB,CAOP;;GAGA,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,CAC7BT,IAAI,CAAEH,OAAO,CAACa,YADe,CAAN,EAApB","sourcesContent":["import * as Actions from './actionTypes';\n\n/**\n * Stores the username into the redux store\n * \n * @param {String} username\n */\nexport const loginUser = (username)=>({\n    type: Actions.USER_LOGIN,\n    payload: {\n        username\n    }\n});\n\n/**\n * Stores the username into the redux store\n * \n * @param {Number} username\n */\nexport const userMoney = (money)=>({\n    type: Actions.USER_MONEY,\n    payload: {\n        money\n    }\n});\n\n/**\n * Stores an array of item data\n * \n * @param {Array} data \n */\nexport const loadItems = (data) =>({\n    type: Actions.ITEMS_LOAD,\n    payload: {\n        data\n    }\n})\n\n/**\n * Unloads the items from the database\n */\nexport const unloadItems = () =>({\n    type: Actions.ITEMS_UNLOAD\n})"]},"metadata":{},"sourceType":"module"}