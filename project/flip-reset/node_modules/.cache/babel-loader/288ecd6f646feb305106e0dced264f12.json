{"ast":null,"code":"import _defineProperty from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/Justin/go/src/FlipReset/project/flip-reset/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{BrowserRouter as Router,Switch,Route,withRouter,Link,useRouteMatch,useParams,Redirect}from\"react-router-dom\";import\"./login.css\";import{compose}from'recompose';import{withFirebase}from'../components/Firebase/context';import{connect}from'react-redux';import{loginUser,userMoney}from'../redux/actions';var SignInPage=function SignInPage(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SignInForm,null));};var INITIAL_STATE={email:'',password:'',error:null};var ERROR_CODE_ACCOUNT_EXISTS='auth/account-exists-with-different-credential';var SignInFormBase=/*#__PURE__*/function(_Component){_inherits(SignInFormBase,_Component);var _super=_createSuper(SignInFormBase);function SignInFormBase(props){var _this;_classCallCheck(this,SignInFormBase);_this=_super.call(this,props);_this.onSubmit=function(event){var _this$state=_this.state,email=_this$state.email,password=_this$state.password;_this.props.firebase.doSignInWithEmailAndPassword(email,password).then(function(){_this.setState(_objectSpread({},INITIAL_STATE));_this.props.loginUser(email);_this.props.history.push('/home');}).catch(function(error){_this.setState({error:error});});event.preventDefault();};_this.onChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.state=_objectSpread({},INITIAL_STATE);return _this;}_createClass(SignInFormBase,[{key:\"render\",value:function render(){var _this$state2=this.state,email=_this$state2.email,password=_this$state2.password,error=_this$state2.error;var isInvalid=password===''||email==='';return/*#__PURE__*/React.createElement(\"div\",{className:\"Login\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"title-label\"},\"FlipReset\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"input\",{className:\"username-label\",name:\"email\",value:email,onChange:this.onChange,type:\"text\",placeholder:\"Email Address\"}),/*#__PURE__*/React.createElement(\"input\",{className:\"password-label\",name:\"password\",value:password,onChange:this.onChange,type:\"password\",placeholder:\"Password\"}),/*#__PURE__*/React.createElement(\"button\",{disabled:isInvalid,type:\"submit\"},\"Sign In\"),error&&/*#__PURE__*/React.createElement(\"p\",null,error.message)),/*#__PURE__*/React.createElement(Link,{to:\"/register\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary register-button\"},\"Register\")));}}]);return SignInFormBase;}(Component);var SignInForm=compose(withRouter,withFirebase)(SignInFormBase);export{SignInForm};var mapStateToProps=function mapStateToProps(state){var user=state.user;return{user:user};};var mapDispatchToProps={loginUser:loginUser,userMoney:userMoney};export default connect(mapStateToProps,mapDispatchToProps)(SignInPage);","map":{"version":3,"sources":["/Users/Justin/go/src/FlipReset/project/flip-reset/src/login/login.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","withRouter","Link","useRouteMatch","useParams","Redirect","compose","withFirebase","connect","loginUser","userMoney","SignInPage","INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","SignInFormBase","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","catch","preventDefault","onChange","target","name","value","isInvalid","message","SignInForm","mapStateToProps","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    withRouter,\n    Link,\n    useRouteMatch,\n    useParams,\n    Redirect,\n\n} from \"react-router-dom\";\nimport \"./login.css\";\nimport { compose } from 'recompose';\nimport { withFirebase } from '../components/Firebase/context'\nimport { connect } from 'react-redux';\nimport { loginUser , userMoney } from '../redux/actions'; \n\n\nconst SignInPage = () => (\n    <div>\n        <SignInForm />\n    </div>\n);\n\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n    'auth/account-exists-with-different-credential';\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.loginUser(email);\n                this.props.history.push('/home');\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div className=\"Login\">\n                <div>\n                    <label className=\"title-label\">FlipReset</label>\n                </div>\n                <form onSubmit={this.onSubmit}>\n                    <input\n                        className=\"username-label\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                        type=\"text\"\n                        placeholder=\"Email Address\"\n                    />\n                    <input\n                        className=\"password-label\"\n                        name=\"password\"\n                        value={password}\n                        onChange={this.onChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                    <button disabled={isInvalid} type=\"submit\">\n                        Sign In\n        </button>\n                \n                    {error && <p>{error.message}</p>}\n                </form>\n                <Link to=\"/register\">\n                    <button className=\"btn btn-primary register-button\">Register</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\n\n\nexport {SignInForm};\n\n\n\nconst mapStateToProps = (state) => {\n    const { user} = state;\n    return {\n      user,\n    }\n  }\n  \n  const mapDispatchToProps = {\n    loginUser,\n    userMoney\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(SignInPage);"]},"metadata":{},"sourceType":"module"}