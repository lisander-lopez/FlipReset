{"ast":null,"code":"var _jsxFileName = \"/home/travis/FlipReset/project/flip-reset/src/directmessage/DM.js\";\nimport React, { Component } from \"react\";\nimport \"./DM.css\";\n\nclass DM extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sender: 'Justin'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"conversation-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ConversationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default DM;\n\nfunction newMessage(i, sender, message, didReceive) {\n  console.log(message);\n  return /*#__PURE__*/React.createElement(Message, {\n    i: i,\n    sender: sender,\n    message: message,\n    didReceive: didReceive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  });\n}\n\nconst TestData = [{\n  i: 0,\n  sender: \"Me\",\n  message: \"hello there\",\n  didReceive: false\n}, {\n  i: 1,\n  sender: \"Justin\",\n  message: \"General kenobi!\",\n  didReceive: true\n}, {\n  i: 2,\n  sender: \"Me\",\n  message: \"only a sith deals in absolutes!\",\n  didReceive: false\n}, {\n  i: 3,\n  sender: \"Justin\",\n  message: \"take a seat, young skywalker.\",\n  didReceive: true\n}, {\n  i: 4,\n  sender: \"Me\",\n  message: \"I am the senate!\",\n  didReceive: false\n}];\n\nclass ConversationContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // messages contains a list of message metadata\n      // the conversation component does all of the rendering\n      messages: [],\n      theirName: 'Justin',\n      messageCount: 0\n    };\n    this.updateMessageList = this.updateMessageList.bind(this);\n  } // will be attached to send button of text box\n\n\n  updateMessageList(message) {\n    // const msgs = this.state.messages;\n    // let tempMsgs = [];\n    // tempMsgs.concat(msgs);\n    // tempMsgs.push(message);\n    this.setState({\n      messages: this.state.messages.concat(message),\n      messageCount: this.state.messages.length + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"conversation-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ConversationHeader, {\n      sender: this.state.theirName,\n      messageCount: this.state.messageCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(ConversationThread, {\n      messages: this.state.messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextBox, {\n      i: this.state.messageCount,\n      sender: this.state.messageCount % 2 !== 0 ? this.state.theirName : \"Me\",\n      didReceive: this.state.messageCount % 2 !== 0 ? true : false,\n      udpate: this.updateMessageList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }));\n  }\n\n} // Conversation is just a render helper. It is a glorified list, taking in the messages\n// state from conversationContainer\n\n\nclass ConversationThread extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"conversation-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }\n    }, this.props.messages.map(data => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: data.i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, newMessage(data.i, data.sender, data.message, data.didReceive));\n    }));\n  }\n\n}\n\nclass ConversationHeader extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"conversation-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, \"Conversation with \", this.props.sender), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, this.props.messageCount, \" messages\"));\n  }\n\n}\n\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleReceive = this.toggleReceive.bind(this);\n  } // not used yet\n\n\n  toggleReceive() {\n    return this.props.didReceive;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"message animated bounceInLeft delay-1s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"message-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"message-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.speakingtigerbooks.com/wp-content/uploads/2016/09/facebook-default-no-profile-pic.jpg\",\n      alt: \"Author Picture\",\n      srcset: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"message-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, this.props.sender)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }, this.props.message)));\n  }\n\n}\n\nclass TextBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => event => {\n      event.preventDefault();\n      this.setState({\n        [name]: event.target.value,\n        isDisabled: this.state.messageText === '' ? true : false\n      });\n    };\n\n    this.state = {\n      messageText: '',\n      isDisabled: true\n    };\n  }\n\n  buildMessageData() {\n    const text = this.state.messageText;\n    console.log(\"FROM TEXTBOX: \" + text);\n    this.setState({\n      messageText: ''\n    });\n    return [{\n      i: this.props.i,\n      sender: this.props.sender,\n      message: text,\n      didReceive: this.props.didReceive\n    }];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"messageText\",\n      id: \"messageText\",\n      class: \"message-message\",\n      placeholder: \"Enter your message to send...\",\n      value: this.state.messageText,\n      onChange: this.handleChange(\"messageText\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      class: `message-message-link ${this.state.isDisabled ? \"disabled\" : \"\"}`,\n      onClick: () => this.props.udpate(this.buildMessageData()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }\n    }, \"Send\"));\n  }\n\n} // individual element for AllConversations, clickable card to render the\n// selected conversation\n\n\nclass ConversationNode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lasMessage: 'hi',\n      sender: 'Justin',\n      messageCount: '5'\n    };\n  }\n\n} // List of all the conversations \n\n\nclass AllConversations extends Component {\n  generateConvos() {\n    let convos = [];\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n}","map":{"version":3,"sources":["/home/travis/FlipReset/project/flip-reset/src/directmessage/DM.js"],"names":["React","Component","DM","constructor","props","state","sender","render","newMessage","i","message","didReceive","console","log","TestData","ConversationContainer","messages","theirName","messageCount","updateMessageList","bind","setState","concat","length","ConversationThread","map","data","ConversationHeader","Message","toggleReceive","TextBox","handleChange","name","event","preventDefault","target","value","isDisabled","messageText","buildMessageData","text","udpate","ConversationNode","lasMessage","AllConversations","generateConvos","convos"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./DM.css\";\n\nclass DM extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsender: 'Justin'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"conversation-container\">\n\t\t\t\t<ConversationContainer />\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default DM;\n\nfunction newMessage(i, sender, message, didReceive) {\n\tconsole.log(message);\n\treturn (\n\t\t<Message i={i} sender={sender} message={message} didReceive={didReceive} />\n\t);\n}\n\nconst TestData = [\n\t{ i: 0, sender: \"Me\", message: \"hello there\", didReceive: false },\n\t{ i: 1, sender: \"Justin\", message: \"General kenobi!\", didReceive: true },\n\t{ i: 2, sender: \"Me\", message: \"only a sith deals in absolutes!\", didReceive: false },\n\t{ i: 3, sender: \"Justin\", message: \"take a seat, young skywalker.\", didReceive: true },\n\t{ i: 4, sender: \"Me\", message: \"I am the senate!\", didReceive: false },\n];\n\nclass ConversationContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t// messages contains a list of message metadata\n\t\t\t// the conversation component does all of the rendering\n\t\t\tmessages: [],\n\t\t\ttheirName: 'Justin',\n\t\t\tmessageCount: 0,\n\t\t}\n\t\tthis.updateMessageList = this.updateMessageList.bind(this);\n\t}\n\n\t// will be attached to send button of text box\n\tupdateMessageList(message) {\n\t\t// const msgs = this.state.messages;\n\t\t// let tempMsgs = [];\n\t\t// tempMsgs.concat(msgs);\n\t\t// tempMsgs.push(message);\n\n\t\tthis.setState({\n\t\t\tmessages: this.state.messages.concat(message),\n\t\t\tmessageCount: this.state.messages.length+1\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"conversation-container\">\n\t\t\t\t<ConversationHeader\n\t\t\t\t\tsender={this.state.theirName}\n\t\t\t\t\tmessageCount={this.state.messageCount}\n\t\t\t\t/>\n\t\t\t\t<ConversationThread\n\t\t\t\t\tmessages={this.state.messages}\n\t\t\t\t/>\n\t\t\t\t<TextBox\n\t\t\t\t\ti={this.state.messageCount}\n\t\t\t\t\tsender={((this.state.messageCount %2 !== 0) ? this.state.theirName : \"Me\")}\n\t\t\t\t\tdidReceive={((this.state.messageCount %2 !== 0) ? true : false)}\n\t\t\t\t\tudpate={this.updateMessageList}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Conversation is just a render helper. It is a glorified list, taking in the messages\n// state from conversationContainer\nclass ConversationThread extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ul class=\"conversation-list\">\n\t\t\t\t{this.props.messages.map(data => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={data.i}>\n\t\t\t\t\t\t\t{newMessage(data.i, data.sender, data.message, data.didReceive)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nclass ConversationHeader extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"conversation-header\">\n\t\t\t\t<h3>Conversation with {this.props.sender}</h3>\n\t\t\t\t<h5>{this.props.messageCount} messages</h5>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Message extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.toggleReceive = this.toggleReceive.bind(this);\n\t}\n\n\t// not used yet\n\ttoggleReceive() {\n\t\treturn (this.props.didReceive);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"message animated bounceInLeft delay-1s\">\n\t\t\t\t<div class=\"message-header\">\n\t\t\t\t\t<div class=\"message-author\">\n\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc=\"https://www.speakingtigerbooks.com/wp-content/uploads/2016/09/facebook-default-no-profile-pic.jpg\"\n\t\t\t\t\t\t\t\talt=\"Author Picture\"\n\t\t\t\t\t\t\t\tsrcset=\"\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<p class=\"message-name\">{this.props.sender}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"message-text\">\n\t\t\t\t\t\t{this.props.message}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass TextBox extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessageText: '',\n\t\t\tisDisabled: true,\n\t\t};\n\t}\n\n\thandleChange = name => event => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\t[name]: event.target.value,\n\t\t\tisDisabled: ((this.state.messageText === '') ? true : false)\n\t\t});\n\t}\n\n\tbuildMessageData() {\n\t\tconst text = this.state.messageText;\n\t\tconsole.log(\"FROM TEXTBOX: \" + text);\n\t\tthis.setState({\n\t\t\tmessageText: '',\n\t\t});\n\t\treturn ([{ i: this.props.i, sender: this.props.sender, message: text, didReceive: this.props.didReceive }]);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"input-container\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"messageText\"\n\t\t\t\t\tid=\"messageText\"\n\t\t\t\t\tclass=\"message-message\"\n\t\t\t\t\tplaceholder=\"Enter your message to send...\"\n\t\t\t\t\tvalue={this.state.messageText}\n\t\t\t\t\tonChange={this.handleChange(\"messageText\")}\n\t\t\t\t/>\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclass={`message-message-link ${this.state.isDisabled ? \"disabled\" : \"\"}`}\n\t\t\t\t\tonClick={() => this.props.udpate(this.buildMessageData())}\n\t\t\t\t>\n\t\t\t\t\tSend\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// individual element for AllConversations, clickable card to render the\n// selected conversation\nclass ConversationNode extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlasMessage: 'hi',\n\t\t\tsender: 'Justin',\n\t\t\tmessageCount: '5'\n\t\t}\n\n\t}\n}\n\n// List of all the conversations \nclass AllConversations extends Component {\n\tgenerateConvos() {\n\t\tlet convos = [];\n\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}