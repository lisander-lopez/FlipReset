What does this tech accomplish for you ?
Redux is being used in our project so that when we pull or send data to the database
we also can save what we need to a local redux store(DB) for our project when a user signs
in with their credentials we're saving their username to the local redux store.
then we import that store in components later and have access to the currently signed 
in user so we dont need to try and re authenticate. Anytime we want to save the state
of some data whether is comes from our firebase DB or not we can simply save 
it to the store and use it in another component as needed. 
-On top of that now we added redux persist which wraps redux store and firebase in a way 
that when we refresh the page or go back a page it loads from the previously stored redux local
store so you dont get asked to re sign in every time you reload or go back a page !

How this technology accomplishes this?
we create a store that combines the reducers we made which will save the state into that local 
redux store that can be accessed later.
by usinig this persist gate it will hold rendering the app until the persisted state has been grabbed and saved 
to the redux store so it will reload the page without having to sign back in 
https://github.com/rt2zz/redux-persist/blob/master/docs/PersistGate.md

The MIT License (MIT)

Copyright (c) 2014 Manuel Mart√≠nez-Almeida

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


what this means for our project is that we get to use this free of charge and that it belongs to us furthermore.